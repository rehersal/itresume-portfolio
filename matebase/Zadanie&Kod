## 1. Саммари

Гипотезы:

Если пользователь часто заходит в первые 7 дней, он скорее всего останется дольше.

Чем больше заданий решает пользователь, тем выше вероятность продления подписки.

Пользователи, которые быстро решают первую задачу, быстрее понимают функциональность платформы и, вероятно, будут более вовлечёнными.

Слишком высокий коэффициент успешности решения задач может говорить о том, что задачи слишком просты и не стимулируют пользователей, тогда как слишком низкий – что задачи слишком сложны и могут демотивировать.

Если среднее время между посещениями оказывается большим, это может свидетельствовать о низкой вовлеченности или неудовлетворенности функционалом платформы. В свою очередь, маленький интервал указывает на регулярное использование и высокий интерес к платформе.



## 2. Аналитическая часть

Запрос 1: Retention пользователей (7 дней после подписки)

SELECT signup_date,

COUNT(user_id) AS total_users,

COUNT(CASE WHEN active_day_7 IS NOT NULL THEN user_id END) * 100.0 / COUNT(user_id) AS retention_7_day

FROM (

SELECT

u.id AS user_id,

u.date_joined::DATE AS signup_date,

MAX(CASE

WHEN ue.entry_at::DATE = u.date_joined::DATE + INTERVAL '7 days'

THEN u.id

END) AS active_day_7

FROM Users u

LEFT JOIN UserEntry ue ON u.id = ue.user_id

GROUP BY u.id, u.date_joined

) AS retention_data

GROUP BY signup_date

ORDER BY signup_date;



Вывод: Для большинства дат процент удержания ровно через 7 дней равен 0, а в тех, где он не нулевой, показатели не превышают 15-30%, хотя бывают разовые «всплески» до 100% для малого количества пользователей. Это может свидетельствовать о том, что пользователи не возвращаются на платформу ровно через неделю после регистрации.



Запрос 2: Количество решённых задач в зависимости от удержания (30 дней)



SELECT num_solved_tasks,

COUNT(user_id) AS total_users,

COUNT(CASE WHEN retention_30 IS NOT NULL THEN user_id END) * 100.0 / COUNT(user_id) AS retention_rate

FROM (

SELECT

u.id AS user_id,

COUNT(DISTINCT cs.problem_id) AS num_solved_tasks,

MAX(CASE

WHEN ue.entry_at::DATE = u.date_joined::DATE + INTERVAL '30 days'

THEN u.id

END) AS retention_30

FROM Users u

LEFT JOIN CodeSubmit cs ON u.id = cs.user_id AND cs.is_false = 0

LEFT JOIN UserEntry ue ON u.id = ue.user_id

GROUP BY u.id, u.date_joined

) AS task_retention

GROUP BY num_solved_tasks

ORDER BY num_solved_tasks;



Вывод: Из результатов видно, что 30-дневное удержание пользователей крайне низкое для большинства групп по количеству решённых задач:

Пользователи с 2–4 решёнными задачами (109, 57 и 55 пользователей) имеют retention в районе 0,9–1,8%. Это говорит о том, что даже если пользователи решают несколько задач, их возвращаемость спустя 30 дней практически отсутствует.

Группа с 7 решёнными задачами (16 пользователей) демонстрирует заметный скачок – 6,25% удержание.

Группа с 11 решёнными задачами (11 пользователей) показывает ещё более высокий retention – 9,09%.

В остальных группах (5, 6, 8, 9, 10, 12, 13 задач) наблюдается 0% retention, что, возможно, связано с малым числом пользователей в этих группах.





Запрос 3: Среднее время до первой успешной попытки решения задачи (в днях)



WITH first_success AS (

SELECT

cs.user_id,

MIN(cs.created_at) AS first_success_time

FROM CodeSubmit cs

WHERE cs.is_false = 0

GROUP BY cs.user_id

)

SELECT

ROUND(AVG(EXTRACT(EPOCH FROM (fs.first_success_time - u.date_joined)) / 3600)::numeric, 2) AS avg_hours_to_first_success

FROM Users u

JOIN first_success fs ON u.id = fs.user_id;



Вывод: Вышло около 150 дней. Это говорит о том, что пользователям требуется очень много времени, чтобы добиться первого успеха. Такая длительная задержка может свидетельствовать о сложности задач или проблемами с мотивацией.



Запрос 4: Коэффициент успешности выполнения задач



SELECT

ROUND( COUNT(CASE WHEN cs.is_false = 0 THEN 1 END)::numeric * 100.0 / COUNT(*) , 2) AS task_success_rate

FROM CodeSubmit cs;



Вывод: Получилось 38,41%. Означает, что из 100 попыток примерно 38 завершаются успешно. Это может свидетельствовать о высокой сложности задач и не слишком сильную мотивацию.



Запрос 5. Среднее время между посещениями (в часах)



WITH user_visits AS (

SELECT

user_id,

entry_at,

LAG(entry_at) OVER (PARTITION BY user_id ORDER BY entry_at) AS prev_entry_at

FROM UserEntry

),

user_intervals AS (

SELECT

user_id,

EXTRACT(EPOCH FROM (entry_at - prev_entry_at)) / 3600 AS hours_between

FROM user_visits

WHERE prev_entry_at IS NOT NULL

)

SELECT

ROUND(AVG(hours_between)::numeric, 2) AS avg_hours_between_visits

FROM user_intervals;



Вывод: Получилось 155 часов, т.е. 6.5 дней. Пользователи не часто возвращаются на платформу, что может означать недостаток интересного контента или сложность интерфейса.





## 3. Финальные выводы

### Что мы выяснили:

Retention на 7-й день сильно падает, практически отсутствует — значит, пользователи теряют интерес.

30-дневное удержание пользователей крайне низкое для большинства групп по количеству решённых задач.

Пользователям требуется очень много времени, чтобы добиться первого успеха.

У пользователей невысокий коэффициент успешно решенных задач.

Пользователи не часто возвращаются на платформу, что может означать недостаток интересного контента или сложность интерфейса. В этом случае стоит рассмотреть меры по повышению вовлеченности: улучшение UX, запуск акций или уведомлений, стимулирующих повторные заходы.



### Что можно предложить:

Retention на 7-й день сильно падает – пользователи теряют интерес.

Внедрить активный onboarding: Создать серию приветственных писем, push-уведомлений или SMS с напоминаниями, где пользователь получает советы по работе с платформой и стимулируется вернуться в течение первой недели.

Запустить "День 7": Организовать акцию или бонус именно на 7-й день после регистрации (например, временное повышение баллов, скидки на задачи), чтобы мотивировать повторный визит.

30-дневное удержание крайне низкое для большинства групп по количеству решённых задач.

Лояльность через прогрессивное вознаграждение: Внедрить систему бонусов за регулярное использование платформы. Например, чем больше задач решено за первый месяц, тем больше дополнительных баллов или привилегий получает пользователь.

Провести A/B-тестирование стимулов: Проверить различные модели вовлечения (например, челленджи, соревнования, рейтинговые таблицы) для определения наиболее эффективного способа повышения retention после 30 дней.

Пользователям требуется очень много времени для достижения первого успеха.

Упростить первые задачи: Ввести «легкие» или обучающие задачи для новых пользователей, которые гарантируют быстрый успех. Это поможет быстрее продемонстрировать ценность платформы и повысить уверенность пользователя.

Невысокий коэффициент успешно решенных задач.

Обеспечить качественную поддержку: Добавить подробные объяснения и подсказки для задач, создать FAQ или чат поддержки, где пользователи могут быстро получить помощь при возникновении трудностей.

Пользователи нечасто возвращаются на платформу, что может свидетельствовать о недостатке интересного контента или сложном интерфейсе.

Запустить регулярные акции и обновления: Организовать регулярные кампании (например, сезонные акции, новые челленджи, бонусные периоды), а также активную коммуникацию через email-рассылки или push-уведомления, чтобы напоминать пользователям о новых возможностях платформы.

